# ES440_cathode.py
import numpy as np

class ES440_cathode:
    def __init__(self, x_data, y_data):
        self.x_data = np.array(x_data)
        self.y_data = np.array(y_data)
        
    def interpolate(self, x, inverse=False):
        if inverse:
            if x < min(self.y_data) or x > max(self.y_data):
                print(f"Warning: Input {x} is out of the interpolation range ({min(self.y_data)} < y < {max(self.y_data)}).")
                # Handle out of range input, e.g., return None or clamp to valid data range
                x = max(min(self.y_data), min(max(self.y_data), x))
                print(f"Clamped input to {x}.")
            return np.interp(x, self.y_data, self.x_data)
        else:
            if x < min(self.x_data) or x > max(self.x_data):
                print(f"Warning: Input {x} is out of the interpolation range ({min(self.x_data)} < x < {max(self.x_data)}).")
                # Handle out of range input, e.g., return None or clamp to valid data range
                x = max(min(self.x_data), min(max(self.x_data), x))
                print(f"Clamped input to {x}.")
            return np.interp(x, self.x_data, self.y_data)
    
    # Data: tuple of (heater current [A], heater voltage [V])
    heater_voltage_current_data = [
        (0, 8.61260838995737E-05),
        (0.19640028122802944, 0.01198382938832876),
        (0.44874150456995565, 0.023881532692758167),
        (1.0892898992266233, 0.05362784157487677),
        (2.234586360440591, 0.1101306538551674),
        (3.3024513709866423, 0.17253925474572274),
        (3.8852214670728844, 0.22003984063744997),
        (4.604776189360207, 0.31494668385282365),
        (4.974314506679168, 0.36536325287086924),
        (5.168943051324117, 0.3979763299742205),
        (5.324527771267871, 0.41873681743613766),
        (5.557937661120226, 0.4513580970236697),
        (5.635762831028828, 0.463218889149285),
        (5.888563393484885, 0.4958442699789076),
        (6.102582610733537, 0.5284614483243493),
        (6.277623623154442, 0.5521871338176703),
        (6.588924302788847, 0.599630302320131),
        (7.367176001874855, 0.7182382235762828),
        (7.9898429810171105, 0.8160856573705177),
        (8.067733770799158, 0.8309075462854463),
        (8.593250527302555, 0.9198511835012888),
        (9.041204593391143, 1.0087784157487696),
        (9.488896179985941, 1.0858612608389966),
        (9.995153503632531, 1.1807229903913754),
        (10.520801499882824, 1.2755888211858446),
        (11.066037028357162, 1.379342043590344),
        (11.572163112256854, 1.4682815795640962),
        (12.020117178345444, 1.557208811811577),
        (12.252542770096086, 1.5454153639594091),
        (12.40845558940708, 1.5809796109678929)
    ]

    # Data: tuple of (heater current [A], emission current [A])
    heater_current_emission_current_data = [
        (6.063635202489499, 3.5634435379830975e-7),
        (7.313077126277623, 0.0004097450160926957),
        (8.000853442945596, 0.003609566092382709),
        (8.551488154850544, 0.011841289422557685),
        (9.005657688098534, 0.03626227722650753),
        (9.460323611631207, 0.057213732751388344),
        (9.942401309773663, 0.1124463385705633),
        (9.969785507145406, 0.1453268127546631),
        (10.479578329516062, 0.23723784436234613),
        (10.493173907868801, 0.3068218594573748),
        (11.016672617544348, 0.5590162481568721),
        (11.512814707086187, 0.7595590289861436),
        (11.99505786865687, 1.19674864245435),
        (12.33930453108535, 2.2002182031514392),
        (12.38089100604667, 1.6351410760506893)
    ]

    # Data: tuple of (heater current [A], true temperature [K])
    heater_current_true_temperature_data = [
        (6.060869565217391, 1038.1399484306926),
        (7.313768115942029, 1333.2657597581576),
        (8.002173913043478, 1456.3207966568862),
        (8.552898550724636, 1537.5869120654397),
        (9.007246376811594, 1621.2572241486619),
        (9.447826086956521, 1658.2946563528049),
        (9.957246376811595, 1717.4535431670668),
        (9.971014492753623, 1737.0925580154708),
        (10.494202898550723, 1806.0745087578907),
        (10.494202898550723, 1781.5346314572776),
        (11.017391304347825, 1870.1484840401884),
        (11.513043478260869, 1899.8524050858005),
        (11.994927536231883, 1951.6351026940515),
        (12.352898550724637, 2018.0777096114518),
        (12.366666666666665, 1991.0909575886901)
    ]
